// variable definitions
[VarDef, Tool_Export_Tri]
[VarDef, Tool_Polypaint_Colorize]
[VarDef, Tool_Export_Txr]
[VarDef, Tool_Export_Flp]
[VarDef, Tool_Export_Mrg]
[VarDef, Tool_Export_Grp]

[VarDef, dllPath, "dummy"]
[VarDef, exePath, "dummy"]
// hard coded...
[VarDef, dataDirPath, [fileNameResolvePath, "ZBRUSH_ZSTARTUP\ZPlugs64\ThicknessCheckerData\"]]
[VarDef, tmpFile, "thickness.obj"]
[VarDef, memFile, "parameter.mem"]
[VarDef, colorOBJFile, "thickness_color.obj"]
[VarDef, groupOBJFile, "thickness_group.obj"]
[MVarDef, mem, 3, 0]

[VarDef, height, 100.0]
[VarDef, preferredThickness, 3.0]
[VarDef, minimumThickness, 1.0]


// check if this plugin is correctly installed
// from http://docs.pixologic.com/user-guide/customizing-zbrush/zscripting/zfileutils/#dllPath
[RoutineDef, CheckSystem,	
    //check ZBrush version
    [VarSet,Zvers,[ZBrushInfo,0]]
    [If,[Val,Zvers] >= 4.8,,		
        [Note,"\Cff9923This zscript\Cffffff is not designed for this version of \Cff9923ZBrush\Cffffff.",,3,4737096,,300]
        [Exit]
    ]
    // Make sure we have the dll and set its path
    [If, [ZBrushInfo, 6]==0,//windows
        //use the path below for testing only	
        //[VarSet,dllPath,"ThicknessCheckerData\ZFileUtils64.dll"]
        //use the path below for installed plugins
        [VarSet,dllPath,"ZBRUSH_ZSTARTUP\ZPlugs64\ThicknessCheckerData\ZFileUtils64.dll"]		
        
        //use the path below for testing only
        //[VarSet, exePath, "ThicknessCheckerData\ThicknessCheckerTest.exe"]
        //use the path below for installed plugins
        [VarSet, exePath, [fileNameResolvePath, "ZBRUSH_ZSTARTUP\ZPlugs64\ThicknessCheckerData\ThicknessCheckerTest.exe"]]
        ,
        //use the path below for testing only   
        //[VarSet,dllPath,"ThicknessCheckerData/ZFileUtils.lib"]	
        //use the path below for installed plugins
        [VarSet,dllPath,"ZBRUSH_ZSTARTUP/ZPlugs64/ThicknessCheckerData/ZFileUtils.lib"]						
        
        //use the path below for testing only
        //[VarSet, exePath, "ThicknessCheckerData/ThicknessCheckerTest"]
        //use the path below for installed plugins
        [VarSet, exePath, "ZBRUSH_ZSTARTUP/ZPlugs64/ThicknessCheckerData/ThicknessCheckerTest"]
    ]
    // check if there are dll/lib exists
    [If, [FileExists, [Var,exePath]],
    , // else no DLL.
    [Note,"\Cff9923Note :\Cc0c0c0 The \Cff9923 ThicknessChecker plugin \Cffffffdll/lib\Cc0c0c0 could not be found at the correct location.  Please re-install the plugin, making sure the relevant files and folders are in the \CffffffZStartup/ZPlugs\Cc0c0c0 folder."]
    [Exit]
    ]
    [If, [FileExists, [Var,dllPath]],
        //check that correct version
        [VarSet, dllVersion, [FileExecute, [Var,dllPath], Version]]
        [If, [Val,dllVersion] >= 3.0,//dll version
        //OK
    ,//else earlier version			
        [Note,"\Cff9923Note :\Cc0c0c0 The \Cff9923 ZFileUtils plugin \CffffffDLL\Cc0c0c0 is 
        an earlier version which does not support this plugin.  Please install correct version."]
        [Exit]
]			
, // else no DLL.
  [Note,"\Cff9923Note :\Cc0c0c0 The \Cff9923 ZFileUtils plugin \CffffffDLL\Cc0c0c0 could
 not be found at the correct location.  Please re-install the plugin, making sure the 
relevant files and folders are in the \CffffffZStartup/ZPlugs\Cc0c0c0 folder."]
  [Exit]
]
]//end routine


////
// main processing
[ISubPalette, "ZPlugin:ThicknessChecker"]
[ISlider, "ZPlugin:ThicknessChecker:Height (Y)", 100.0, 0.001, 0, 1000, "Set height (Y)",
    [VarSet, height, [IGet, "ZPlugin:ThicknessChecker:Height (Y)"]]
]
[ISlider, "ZPlugin:ThicknessChecker:Preferred thickness", 3.0, 0.001, 0, 1000, "Set preferred thickness",
    [VarSet, preferredThickness, [IGet, "ZPlugin:ThicknessChecker:Preferred thickness"]]
]
[ISlider, "ZPlugin:ThicknessChecker:Minimum thickness", 1.0, 0.001, 0, 1000, "Set minimum required thickness",
    [VarSet, minimumThickness, [IGet, "ZPlugin:ThicknessChecker:Minimum thickness"]]
]
[IButton, "ZPlugin:ThicknessChecker:Compute", "Compute thickness",
    [If, [IExists, Tool:Export],
        [RoutineCall, CheckSystem]
        // store current export settings
        [VarSet, Tool_Export_Tri,[IGet, Tool:Export:Tri]]
        [VarSet, Tool_Polypaint_Colorize,[IGet, Tool:Polypaint:Colorize]]
        [VarSet, Tool_Export_Txr,[IGet, Tool:Export:Txr]]
        [VarSet, Tool_Export_Flp,[IGet, Tool:Export:Flp]]
        [VarSet, Tool_Export_Mrg,[IGet, Tool:Export:Mrg]]
        [VarSet, Tool_Export_Grp,[IGet, Tool:Export:Grp]]

        //set export options
        [IPress,Tool:Export:Tri]
        [IPress,Tool:Polypaint:Colorize]
        // don't need any extra attributes
        [IUnPress,Tool:Export:Txr]
        [IUnPress,Tool:Export:Flp]
        [IUnPress,Tool:Export:Mrg]
        [IUnPress,Tool:Export:Grp]

        //export current subtool to OBJ file (temporary file)
        [FileNameSetNext, [StrMerge, [Var, dataDirPath], [Var, tmpFile]]]
        [IPress,Tool:Export]

        // restore original settings
        [If, [Var, Tool_Export_Tri],
            [IPress, Tool:Export:Tri],
            [IPress, Tool:Export:Qud]
        ]
        [ISet, Tool:Polypaint:Colorize, [Var, Tool_Polypaint_Colorize]]
        [ISet, Tool:Export:Txr, [Var, Tool_Export_Txr]]
        [ISet, Tool:Export:Flp, [Var, Tool_Export_Flp]]
        [ISet, Tool:Export:Mrg, [Var, Tool_Export_Mrg]]
        [ISet, Tool:Export:Grp, [Var, Tool_Export_Grp]]

        ////
        [MVarSet, mem, 0, [Var, height]]
        [MVarSet, mem, 1, [Var, preferredThickness]]
        [MVarSet, mem, 2, [Var, minimumThickness]]
        [MemSaveToFile, mem, [StrMerge, [Var, dataDirPath], [Var, memFile]], 1]

        //full path to the file to open
        [VarSet,fullFilePath,[FileNameResolvePath,"ThicknessCheckerData\thickness.obj"]]
        //create memblock for app path
        [MemCreate,ZFileUTils_AppPath, 256, 0]
        //write app path to memblock
        [MemWriteString,ZFileUTils_AppPath,exePath,0]
        [VarSet,err,[FileExecute,[Var,dllPath],"LaunchAppWithFile",#fullFilePath,,ZFileUTils_AppPath]]
        //delete the memblock as we've done with it
        [MemDelete,ZFileUTils_AppPath]

        [Delay, 3] // magic number...

        // import to Tool
        [IPress,"Tool:Copy Tool"]
        [IPress,"Tool:Paste Tool"]
        [IPress,"Tool:Subtool:Del All"]
        [IKeyPress, 13]
        [FileNameSetNext, [StrMerge, [Var, dataDirPath], [Var, groupOBJFile]]]
        [IPress,"Tool:Import"]

        [IPress,"Tool:Copy Tool"]
        [IPress,"Tool:Paste Tool"]
        [IPress,"Tool:Subtool:Del All"]
        [FileNameSetNext, [StrMerge, [Var, dataDirPath], [Var, colorOBJFile]]]
        [IPress,"Tool:Import"]

        // erase temporary file.
        [FileDelete, [StrMerge, [Var, dataDirPath], [Var, memFile]]]
        [FileDelete, [StrMerge, [Var, dataDirPath], [Var, tmpFile]]]
        [FileDelete, [StrMerge, [Var, dataDirPath], [Var, colorOBJFile]]]
        [FileDelete, [StrMerge, [Var, dataDirPath], [Var, groupOBJFile]]]
        ,
    ],
    0,
    0
]
